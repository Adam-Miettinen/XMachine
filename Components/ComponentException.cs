using System;

namespace XMachine.Components
{
	/// <summary>
	/// An exception generated by a component registered with <see cref="XMachine"/>. Tracks the source of the
	/// exception for debugging purposes.
	/// </summary>
	public class ComponentException : Exception
	{
		private object component;
		private string message;

		/// <summary>
		/// Initialize an empty <see cref="ComponentException"/>.
		/// </summary>
		public ComponentException() : base() { }

		/// <summary>
		/// Initialize a <see cref="ComponentException"/> with the given component as source.
		/// </summary>
		public ComponentException(object component) => Component = component;

		/// <summary>
		/// Initialize a <see cref="ComponentException"/> with the given inner exception and no source.
		/// </summary>
		public ComponentException(Exception innerException) : base(string.Empty, innerException) { }

		/// <summary>
		/// Initialize a<see cref= "ComponentException" /> with the given component as source and the given inner exception.
		/// </summary>
		public ComponentException(object component, Exception innerException) : base(string.Empty, innerException) { }

		/// <summary>
		/// States the source of the error.
		/// </summary>
		public override string Message => message;

		/// <summary>
		/// The object provided as the component source, if any.
		/// </summary>
		public override string Source => Component == null ? "Unknown component" : Component.GetType().Name;

		private object Component
		{
			get => component;
			set
			{
				component = value;
				message = $"Error in component: {Source}.";
			}
		}

	}
}
